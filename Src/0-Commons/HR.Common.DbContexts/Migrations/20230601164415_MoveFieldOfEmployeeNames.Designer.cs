// <auto-generated />
using System;
using HR.Common.DbContexts.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR.Common.DbContexts.Migrations
{
    [DbContext(typeof(HRDbContext))]
    [Migration("20230601164415_MoveFieldOfEmployeeNames")]
    partial class MoveFieldOfEmployeeNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HR.Common.Models.Commons.AppConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descriptions")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("Idx_AppConfiguration_Name");

                    b.HasIndex("Name", "IsActive")
                        .IsUnique()
                        .HasDatabaseName("Idx_AppConfiguration_Name_IsActive");

                    b.ToTable("AppConfiguration");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b97f7cd-f230-44ea-9e04-4624ef47d99d"),
                            Descriptions = "Password Minimum Length",
                            IsActive = true,
                            Name = "PasswordMinimumLength",
                            Value = "6"
                        },
                        new
                        {
                            Id = new Guid("3407d303-d67f-4319-a742-9095b7cbced4"),
                            Descriptions = "Password Maximum Length",
                            IsActive = true,
                            Name = "PasswordMaximumLength",
                            Value = "100"
                        },
                        new
                        {
                            Id = new Guid("bc1e15c7-2aa7-4e79-b06e-405706a234ee"),
                            Descriptions = "Expired in of minutes of JWT",
                            IsActive = true,
                            Name = "JwtExpiresInOfMinutes",
                            Value = "60"
                        },
                        new
                        {
                            Id = new Guid("3b326cfc-6c0b-4bf7-a23a-44d3cbb6237e"),
                            Descriptions = "Refresh Token Expiry Time Of Minutes",
                            IsActive = true,
                            Name = "JwtRefreshTokenExpiryTimeOfMinutes",
                            Value = "120"
                        },
                        new
                        {
                            Id = new Guid("8655f15a-79af-4e8a-8b2e-0cb271910a1c"),
                            Descriptions = "Enable password expired.",
                            IsActive = true,
                            Name = "EnablePasswordExpired",
                            Value = "true"
                        },
                        new
                        {
                            Id = new Guid("8bfb6c26-1aad-4fd5-bab4-743445c8c254"),
                            Descriptions = "Days of password expired.",
                            IsActive = true,
                            Name = "DaysOfPasswordExpired",
                            Value = "90"
                        },
                        new
                        {
                            Id = new Guid("2b2f630d-f415-4e32-91b4-dc6177af9ea2"),
                            Descriptions = "Enable force change password.",
                            IsActive = true,
                            Name = "EnableForceChangePassword",
                            Value = "true"
                        });
                });

            modelBuilder.Entity("HR.Common.Models.Commons.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("Idx_Language_Code");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 9,
                            Code = "en",
                            IsActive = true,
                            IsDefault = true,
                            Name = "English"
                        },
                        new
                        {
                            Id = 30,
                            Code = "th",
                            IsActive = true,
                            IsDefault = false,
                            Name = "Thai"
                        });
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.ApprovalFlow", b =>
                {
                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("ParentId", "ChildId", "Type")
                        .HasName("PK_ApprovalFlow");

                    b.ToTable("ApprovalFlow");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name", "LanguageId", "ParentId")
                        .IsUnique()
                        .HasDatabaseName("Idx_Department_Name_LanguageId_ParentId")
                        .HasFilter("[ParentId] IS NOT NULL");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InternalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InternalId")
                        .IsUnique()
                        .HasDatabaseName("Idx_Employee_InternalId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.EmployeeAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAddress");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.EmployeeNamesInfo", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nickname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId", "LanguageId")
                        .HasName("PK_EmployeeLanguageInfo");

                    b.ToTable("EmployeeNamesInfo");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.Holiday", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId", "Date")
                        .IsUnique()
                        .HasDatabaseName("Idx_Holiday_LanguageId_Date");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.LeaveRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LeaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveId");

                    b.ToTable("LeaveRequest");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.LeaveTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "LanguageId")
                        .IsUnique()
                        .HasDatabaseName("Idx_LeaveTable_Name_LanguageId");

                    b.ToTable("LeaveTable");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "LanguageId")
                        .IsUnique()
                        .HasDatabaseName("Idx_Position_Name_LanguageId");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.SummaryLeave", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LeaveTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RemainLeaveDays")
                        .HasColumnType("int");

                    b.Property<int>("TotalLeaveDays")
                        .HasColumnType("int");

                    b.Property<int>("UseLeaveDays")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "LeaveId")
                        .HasName("PK_SummaryLeave");

                    b.HasIndex("LeaveTableId");

                    b.ToTable("SummaryLeave");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.UserEmployee", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "EmployeeId")
                        .HasName("PK_UserEmployee");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserEmployee");
                });

            modelBuilder.Entity("HR.Common.Models.Identities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("UK_Name");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44848fcc-de53-47af-8a43-be578736ca52"),
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "System Administrator",
                            IsActive = true,
                            ModifiedBy = "System",
                            ModifiedDate = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SystemAdmins"
                        },
                        new
                        {
                            Id = new Guid("fcb21698-cc6b-46ca-80bb-5ff52712bd31"),
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Administrator",
                            IsActive = true,
                            ModifiedBy = "System",
                            ModifiedDate = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("4cfc7bef-8149-49f9-ab45-030457c29c56"),
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "User",
                            IsActive = true,
                            ModifiedBy = "System",
                            ModifiedDate = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("78aa239a-f26e-4675-afdd-1de2934a72af"),
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Manager",
                            IsActive = true,
                            ModifiedBy = "System",
                            ModifiedDate = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Manager"
                        });
                });

            modelBuilder.Entity("HR.Common.Models.Identities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LatestLogIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Username")
                        .HasName("UK_Username");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0adb92b6-ad00-45d2-87f9-9e0843835646"),
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedBy = "System",
                            ModifiedDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "4Tzm1sy7dcD0OrKKqQ/NkGsWVjORPjuqAguSuUHu5ybK7TrgZgQerH/eEmT61TFZqYGOUYtvdKJWYFBZ1OJ4vw==",
                            PasswordSalt = "OZesbfE9yolANogRH+ERrdShqarryvl/CGvVjBufsDqzcKWxVAxzRWqa8fG4dlnY1rh93r4h6kVKBk8LcyPwRQ==",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("HR.Common.Models.Identities.UserInRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK_UserInRole");

                    b.HasIndex("RoleId");

                    b.ToTable("UserInRole");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.Employee", b =>
                {
                    b.HasOne("HR.Common.Models.HumanResources.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Position");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.EmployeeAddress", b =>
                {
                    b.HasOne("HR.Common.Models.HumanResources.Employee", "Employee")
                        .WithMany("EmployeeAddresses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.EmployeeNamesInfo", b =>
                {
                    b.HasOne("HR.Common.Models.HumanResources.Employee", "Employee")
                        .WithMany("EmployeeNamesInfos")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.LeaveRequest", b =>
                {
                    b.HasOne("HR.Common.Models.HumanResources.Employee", "Employee")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HR.Common.Models.HumanResources.LeaveTable", "LeaveTable")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("LeaveId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveTable");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.SummaryLeave", b =>
                {
                    b.HasOne("HR.Common.Models.HumanResources.Employee", "Employee")
                        .WithMany("SummaryLeaves")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR.Common.Models.HumanResources.LeaveTable", "LeaveTable")
                        .WithMany("SummaryLeaves")
                        .HasForeignKey("LeaveTableId");

                    b.Navigation("Employee");

                    b.Navigation("LeaveTable");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.UserEmployee", b =>
                {
                    b.HasOne("HR.Common.Models.HumanResources.Employee", "Employee")
                        .WithOne("UserEmployee")
                        .HasForeignKey("HR.Common.Models.HumanResources.UserEmployee", "EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HR.Common.Models.Identities.User", "User")
                        .WithOne("UserEmployee")
                        .HasForeignKey("HR.Common.Models.HumanResources.UserEmployee", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HR.Common.Models.Identities.UserInRole", b =>
                {
                    b.HasOne("HR.Common.Models.Identities.Role", "Role")
                        .WithMany("UserInRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HR.Common.Models.Identities.User", "User")
                        .WithMany("UserInRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.Employee", b =>
                {
                    b.Navigation("EmployeeAddresses");

                    b.Navigation("EmployeeNamesInfos");

                    b.Navigation("LeaveRequests");

                    b.Navigation("SummaryLeaves");

                    b.Navigation("UserEmployee");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.LeaveTable", b =>
                {
                    b.Navigation("LeaveRequests");

                    b.Navigation("SummaryLeaves");
                });

            modelBuilder.Entity("HR.Common.Models.HumanResources.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR.Common.Models.Identities.Role", b =>
                {
                    b.Navigation("UserInRoles");
                });

            modelBuilder.Entity("HR.Common.Models.Identities.User", b =>
                {
                    b.Navigation("UserEmployee");

                    b.Navigation("UserInRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
